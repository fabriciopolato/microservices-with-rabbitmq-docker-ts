{
  "openapi": "3.0.3",
  "info": {
    "title": "api-service",
    "description": "This api will be used to register user/admin and request stock information by the client",
    "contact": {
      "name": "Fabr√≠cio Polato",
      "email": "fabriciopolato@gmail.com"
    },
    "externalDocs": {
      "description": "For the stock-service documentation, access the link:",
      "url": "http://localhost:8081/v1/documentation"
    },
    "version":"1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/v1",
      "description": "API SERVICE - TEST"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API's health",
        "description": "This route is used by the client to know if the api is up and running",
        "tags": ["Health"],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register user or admin",
        "description": "This route is used by the client to register a user with role user or admin",
        "tags": ["Authorization"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "user@test.com",
                    "role": "user"
                  }
                },
                "admin": {
                  "value": {
                    "email": "admin@test.com",
                    "role": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Route to login into the api",
        "description": "This route is used by the client to login into the api",
        "tags": ["Authorization"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "user@test.com",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/reset": {
      "post": {
        "summary": "Route to reset the user password to a new one provided by the user",
        "description": "This route is used by the client to reset the user password to a new one provided by the user",
        "tags": ["Authorization"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reset"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "user@test.com",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/stocks": {
      "get": {
        "summary": "Route to get a stock from the stock-service api",
        "description": "This route is used by the client to get a stock from the stock-service api",
        "tags": ["Stock"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "name": "q",
          "in": "query",
          "description": "the stock code used to search a specific stock",
          "required": true,
          "example": "a.us"
        }],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid Token"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Stock"
                }
              }
            }
          }
        }
      }
    },
    "/stocks/history": {
      "get": {
        "summary": "Route to get its history ",
        "description": "This route is used by the client to get its history ",
        "tags": ["Stock"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "name": "q",
          "in": "query",
          "description": "stock code used to search a specific stock",
          "required": true,
          "example": "a.us"
        }],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Stock"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "summary": "Route to get its history ",
        "description": "This route is used by the admin client to get the top 5 most requested stocks in the api",
        "tags": ["Stats"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Stock"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components":{
    "schemas": {
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": ["email", "role"]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "Reset": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "Stock": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "open": {
            "type": "string"
          },
          "high": {
            "type": "string"
          },
          "low": {
            "type": "string"
          },
          "close": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Stats": {
        "type": "object",
        "properties": {
          "times_requested": {
            "type": "number"
          },
          "stock": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}